Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEF
    DOWHILE

Grammar

Rule 0     S' -> S
Rule 1     S -> stmt S
Rule 2     S -> <empty>
Rule 3     exp -> LPAREN exp RPAREN
Rule 4     stmt -> PRINT exp COMMA exp SEMICOL
Rule 5     stmt -> PRINT exp SEMICOL
Rule 6     stmt -> PRINT LPAREN exp RPAREN SEMICOL
Rule 7     stmt -> VARTYPE NAME ASSIGN exp SEMICOL
Rule 8     exp -> FLOAT
Rule 9     exp -> INT
Rule 10    exp -> BOOL
Rule 11    exp -> CHAR
Rule 12    exp -> NAME
Rule 13    exp -> exp PLUS exp
Rule 14    exp -> exp MINUS exp
Rule 15    exp -> exp MULTIPLICATION exp
Rule 16    exp -> exp DIVISION exp
Rule 17    exp -> exp MODULO exp
Rule 18    exp -> exp GREATERTHAN exp
Rule 19    exp -> exp LESSTHAN exp
Rule 20    exp -> exp GREATERTHANOREQUALTO exp
Rule 21    exp -> exp LESSTHANOREQUALTO exp
Rule 22    exp -> exp EQUALTO exp
Rule 23    exp -> exp NOTEQUALTO exp
Rule 24    exp -> exp COMMA exp
Rule 25    exp -> exp AND exp
Rule 26    exp -> exp OR exp
Rule 27    exp -> exp POW exp
Rule 28    exp -> exp INCREMENT
Rule 29    exp -> exp DECREMENT
Rule 30    exp -> exp NOT
Rule 31    exp -> STRING
Rule 32    exp -> MINUS exp
Rule 33    stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block
Rule 34    block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block
Rule 35    block -> ELSE LCURLY S RCURLY
Rule 36    block -> <empty>

Terminals, with rules where they appear

AND                  : 25
ASSIGN               : 7
BOOL                 : 10
CHAR                 : 11
COMMA                : 4 24
DECREMENT            : 29
DEF                  : 
DIVISION             : 16
DOWHILE              : 
ELSE                 : 35
ELSEIF               : 34
EQUALTO              : 22
FLOAT                : 8
GREATERTHAN          : 18
GREATERTHANOREQUALTO : 20
IF                   : 33
INCREMENT            : 28
INT                  : 9
LCURLY               : 33 34 35
LESSTHAN             : 19
LESSTHANOREQUALTO    : 21
LPAREN               : 3 6 33 34
MINUS                : 14 32
MODULO               : 17
MULTIPLICATION       : 15
NAME                 : 7 12
NOT                  : 30
NOTEQUALTO           : 23
OR                   : 26
PLUS                 : 13
POW                  : 27
PRINT                : 4 5 6
RCURLY               : 33 34 35
RPAREN               : 3 6 33 34
SEMICOL              : 4 5 6 7
STRING               : 31
VARTYPE              : 7
error                : 

Nonterminals, with rules where they appear

S                    : 1 33 34 35 0
block                : 33 34
exp                  : 3 4 4 5 6 7 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29 30 32 33 34
stmt                 : 1

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . VARTYPE NAME ASSIGN exp SEMICOL
    (33) stmt -> . IF LPAREN exp RPAREN LCURLY S RCURLY block

    $end            reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    VARTYPE         shift and go to state 4
    IF              shift and go to state 5

    S                              shift and go to state 1
    stmt                           shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> stmt . S
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . VARTYPE NAME ASSIGN exp SEMICOL
    (33) stmt -> . IF LPAREN exp RPAREN LCURLY S RCURLY block

    $end            reduce using rule 2 (S -> .)
    RCURLY          reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    VARTYPE         shift and go to state 4
    IF              shift and go to state 5

    stmt                           shift and go to state 2
    S                              shift and go to state 6

state 3

    (4) stmt -> PRINT . exp COMMA exp SEMICOL
    (5) stmt -> PRINT . exp SEMICOL
    (6) stmt -> PRINT . LPAREN exp RPAREN SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 8
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 7

state 4

    (7) stmt -> VARTYPE . NAME ASSIGN exp SEMICOL

    NAME            shift and go to state 16


state 5

    (33) stmt -> IF . LPAREN exp RPAREN LCURLY S RCURLY block

    LPAREN          shift and go to state 17


state 6

    (1) S -> stmt S .

    $end            reduce using rule 1 (S -> stmt S .)
    RCURLY          reduce using rule 1 (S -> stmt S .)


state 7

    (4) stmt -> PRINT exp . COMMA exp SEMICOL
    (5) stmt -> PRINT exp . SEMICOL
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           shift and go to state 18
    SEMICOL         shift and go to state 19
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 8

    (6) stmt -> PRINT LPAREN . exp RPAREN SEMICOL
    (3) exp -> LPAREN . exp RPAREN
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 38

state 9

    (8) exp -> FLOAT .

    COMMA           reduce using rule 8 (exp -> FLOAT .)
    SEMICOL         reduce using rule 8 (exp -> FLOAT .)
    PLUS            reduce using rule 8 (exp -> FLOAT .)
    MINUS           reduce using rule 8 (exp -> FLOAT .)
    MULTIPLICATION  reduce using rule 8 (exp -> FLOAT .)
    DIVISION        reduce using rule 8 (exp -> FLOAT .)
    MODULO          reduce using rule 8 (exp -> FLOAT .)
    GREATERTHAN     reduce using rule 8 (exp -> FLOAT .)
    LESSTHAN        reduce using rule 8 (exp -> FLOAT .)
    GREATERTHANOREQUALTO reduce using rule 8 (exp -> FLOAT .)
    LESSTHANOREQUALTO reduce using rule 8 (exp -> FLOAT .)
    EQUALTO         reduce using rule 8 (exp -> FLOAT .)
    NOTEQUALTO      reduce using rule 8 (exp -> FLOAT .)
    AND             reduce using rule 8 (exp -> FLOAT .)
    OR              reduce using rule 8 (exp -> FLOAT .)
    POW             reduce using rule 8 (exp -> FLOAT .)
    INCREMENT       reduce using rule 8 (exp -> FLOAT .)
    DECREMENT       reduce using rule 8 (exp -> FLOAT .)
    NOT             reduce using rule 8 (exp -> FLOAT .)
    RPAREN          reduce using rule 8 (exp -> FLOAT .)


state 10

    (9) exp -> INT .

    COMMA           reduce using rule 9 (exp -> INT .)
    SEMICOL         reduce using rule 9 (exp -> INT .)
    PLUS            reduce using rule 9 (exp -> INT .)
    MINUS           reduce using rule 9 (exp -> INT .)
    MULTIPLICATION  reduce using rule 9 (exp -> INT .)
    DIVISION        reduce using rule 9 (exp -> INT .)
    MODULO          reduce using rule 9 (exp -> INT .)
    GREATERTHAN     reduce using rule 9 (exp -> INT .)
    LESSTHAN        reduce using rule 9 (exp -> INT .)
    GREATERTHANOREQUALTO reduce using rule 9 (exp -> INT .)
    LESSTHANOREQUALTO reduce using rule 9 (exp -> INT .)
    EQUALTO         reduce using rule 9 (exp -> INT .)
    NOTEQUALTO      reduce using rule 9 (exp -> INT .)
    AND             reduce using rule 9 (exp -> INT .)
    OR              reduce using rule 9 (exp -> INT .)
    POW             reduce using rule 9 (exp -> INT .)
    INCREMENT       reduce using rule 9 (exp -> INT .)
    DECREMENT       reduce using rule 9 (exp -> INT .)
    NOT             reduce using rule 9 (exp -> INT .)
    RPAREN          reduce using rule 9 (exp -> INT .)


state 11

    (10) exp -> BOOL .

    COMMA           reduce using rule 10 (exp -> BOOL .)
    SEMICOL         reduce using rule 10 (exp -> BOOL .)
    PLUS            reduce using rule 10 (exp -> BOOL .)
    MINUS           reduce using rule 10 (exp -> BOOL .)
    MULTIPLICATION  reduce using rule 10 (exp -> BOOL .)
    DIVISION        reduce using rule 10 (exp -> BOOL .)
    MODULO          reduce using rule 10 (exp -> BOOL .)
    GREATERTHAN     reduce using rule 10 (exp -> BOOL .)
    LESSTHAN        reduce using rule 10 (exp -> BOOL .)
    GREATERTHANOREQUALTO reduce using rule 10 (exp -> BOOL .)
    LESSTHANOREQUALTO reduce using rule 10 (exp -> BOOL .)
    EQUALTO         reduce using rule 10 (exp -> BOOL .)
    NOTEQUALTO      reduce using rule 10 (exp -> BOOL .)
    AND             reduce using rule 10 (exp -> BOOL .)
    OR              reduce using rule 10 (exp -> BOOL .)
    POW             reduce using rule 10 (exp -> BOOL .)
    INCREMENT       reduce using rule 10 (exp -> BOOL .)
    DECREMENT       reduce using rule 10 (exp -> BOOL .)
    NOT             reduce using rule 10 (exp -> BOOL .)
    RPAREN          reduce using rule 10 (exp -> BOOL .)


state 12

    (11) exp -> CHAR .

    COMMA           reduce using rule 11 (exp -> CHAR .)
    SEMICOL         reduce using rule 11 (exp -> CHAR .)
    PLUS            reduce using rule 11 (exp -> CHAR .)
    MINUS           reduce using rule 11 (exp -> CHAR .)
    MULTIPLICATION  reduce using rule 11 (exp -> CHAR .)
    DIVISION        reduce using rule 11 (exp -> CHAR .)
    MODULO          reduce using rule 11 (exp -> CHAR .)
    GREATERTHAN     reduce using rule 11 (exp -> CHAR .)
    LESSTHAN        reduce using rule 11 (exp -> CHAR .)
    GREATERTHANOREQUALTO reduce using rule 11 (exp -> CHAR .)
    LESSTHANOREQUALTO reduce using rule 11 (exp -> CHAR .)
    EQUALTO         reduce using rule 11 (exp -> CHAR .)
    NOTEQUALTO      reduce using rule 11 (exp -> CHAR .)
    AND             reduce using rule 11 (exp -> CHAR .)
    OR              reduce using rule 11 (exp -> CHAR .)
    POW             reduce using rule 11 (exp -> CHAR .)
    INCREMENT       reduce using rule 11 (exp -> CHAR .)
    DECREMENT       reduce using rule 11 (exp -> CHAR .)
    NOT             reduce using rule 11 (exp -> CHAR .)
    RPAREN          reduce using rule 11 (exp -> CHAR .)


state 13

    (12) exp -> NAME .

    COMMA           reduce using rule 12 (exp -> NAME .)
    SEMICOL         reduce using rule 12 (exp -> NAME .)
    PLUS            reduce using rule 12 (exp -> NAME .)
    MINUS           reduce using rule 12 (exp -> NAME .)
    MULTIPLICATION  reduce using rule 12 (exp -> NAME .)
    DIVISION        reduce using rule 12 (exp -> NAME .)
    MODULO          reduce using rule 12 (exp -> NAME .)
    GREATERTHAN     reduce using rule 12 (exp -> NAME .)
    LESSTHAN        reduce using rule 12 (exp -> NAME .)
    GREATERTHANOREQUALTO reduce using rule 12 (exp -> NAME .)
    LESSTHANOREQUALTO reduce using rule 12 (exp -> NAME .)
    EQUALTO         reduce using rule 12 (exp -> NAME .)
    NOTEQUALTO      reduce using rule 12 (exp -> NAME .)
    AND             reduce using rule 12 (exp -> NAME .)
    OR              reduce using rule 12 (exp -> NAME .)
    POW             reduce using rule 12 (exp -> NAME .)
    INCREMENT       reduce using rule 12 (exp -> NAME .)
    DECREMENT       reduce using rule 12 (exp -> NAME .)
    NOT             reduce using rule 12 (exp -> NAME .)
    RPAREN          reduce using rule 12 (exp -> NAME .)


state 14

    (32) exp -> MINUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 39

state 15

    (31) exp -> STRING .

    COMMA           reduce using rule 31 (exp -> STRING .)
    SEMICOL         reduce using rule 31 (exp -> STRING .)
    PLUS            reduce using rule 31 (exp -> STRING .)
    MINUS           reduce using rule 31 (exp -> STRING .)
    MULTIPLICATION  reduce using rule 31 (exp -> STRING .)
    DIVISION        reduce using rule 31 (exp -> STRING .)
    MODULO          reduce using rule 31 (exp -> STRING .)
    GREATERTHAN     reduce using rule 31 (exp -> STRING .)
    LESSTHAN        reduce using rule 31 (exp -> STRING .)
    GREATERTHANOREQUALTO reduce using rule 31 (exp -> STRING .)
    LESSTHANOREQUALTO reduce using rule 31 (exp -> STRING .)
    EQUALTO         reduce using rule 31 (exp -> STRING .)
    NOTEQUALTO      reduce using rule 31 (exp -> STRING .)
    AND             reduce using rule 31 (exp -> STRING .)
    OR              reduce using rule 31 (exp -> STRING .)
    POW             reduce using rule 31 (exp -> STRING .)
    INCREMENT       reduce using rule 31 (exp -> STRING .)
    DECREMENT       reduce using rule 31 (exp -> STRING .)
    NOT             reduce using rule 31 (exp -> STRING .)
    RPAREN          reduce using rule 31 (exp -> STRING .)


state 16

    (7) stmt -> VARTYPE NAME . ASSIGN exp SEMICOL

    ASSIGN          shift and go to state 40


state 17

    (33) stmt -> IF LPAREN . exp RPAREN LCURLY S RCURLY block
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 41

state 18

    (4) stmt -> PRINT exp COMMA . exp SEMICOL
    (24) exp -> exp COMMA . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 42

state 19

    (5) stmt -> PRINT exp SEMICOL .

    PRINT           reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    VARTYPE         reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    IF              reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    $end            reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    RCURLY          reduce using rule 5 (stmt -> PRINT exp SEMICOL .)


state 20

    (13) exp -> exp PLUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 43

state 21

    (14) exp -> exp MINUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 44

state 22

    (15) exp -> exp MULTIPLICATION . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 45

state 23

    (16) exp -> exp DIVISION . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 46

state 24

    (17) exp -> exp MODULO . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 47

state 25

    (18) exp -> exp GREATERTHAN . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 48

state 26

    (19) exp -> exp LESSTHAN . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 49

state 27

    (20) exp -> exp GREATERTHANOREQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 50

state 28

    (21) exp -> exp LESSTHANOREQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 51

state 29

    (22) exp -> exp EQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 52

state 30

    (23) exp -> exp NOTEQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 53

state 31

    (25) exp -> exp AND . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 54

state 32

    (26) exp -> exp OR . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 55

state 33

    (27) exp -> exp POW . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 56

state 34

    (28) exp -> exp INCREMENT .

    COMMA           reduce using rule 28 (exp -> exp INCREMENT .)
    SEMICOL         reduce using rule 28 (exp -> exp INCREMENT .)
    PLUS            reduce using rule 28 (exp -> exp INCREMENT .)
    MINUS           reduce using rule 28 (exp -> exp INCREMENT .)
    MULTIPLICATION  reduce using rule 28 (exp -> exp INCREMENT .)
    DIVISION        reduce using rule 28 (exp -> exp INCREMENT .)
    MODULO          reduce using rule 28 (exp -> exp INCREMENT .)
    GREATERTHAN     reduce using rule 28 (exp -> exp INCREMENT .)
    LESSTHAN        reduce using rule 28 (exp -> exp INCREMENT .)
    GREATERTHANOREQUALTO reduce using rule 28 (exp -> exp INCREMENT .)
    LESSTHANOREQUALTO reduce using rule 28 (exp -> exp INCREMENT .)
    EQUALTO         reduce using rule 28 (exp -> exp INCREMENT .)
    NOTEQUALTO      reduce using rule 28 (exp -> exp INCREMENT .)
    AND             reduce using rule 28 (exp -> exp INCREMENT .)
    OR              reduce using rule 28 (exp -> exp INCREMENT .)
    POW             reduce using rule 28 (exp -> exp INCREMENT .)
    INCREMENT       reduce using rule 28 (exp -> exp INCREMENT .)
    DECREMENT       reduce using rule 28 (exp -> exp INCREMENT .)
    NOT             reduce using rule 28 (exp -> exp INCREMENT .)
    RPAREN          reduce using rule 28 (exp -> exp INCREMENT .)


state 35

    (29) exp -> exp DECREMENT .

    COMMA           reduce using rule 29 (exp -> exp DECREMENT .)
    SEMICOL         reduce using rule 29 (exp -> exp DECREMENT .)
    PLUS            reduce using rule 29 (exp -> exp DECREMENT .)
    MINUS           reduce using rule 29 (exp -> exp DECREMENT .)
    MULTIPLICATION  reduce using rule 29 (exp -> exp DECREMENT .)
    DIVISION        reduce using rule 29 (exp -> exp DECREMENT .)
    MODULO          reduce using rule 29 (exp -> exp DECREMENT .)
    GREATERTHAN     reduce using rule 29 (exp -> exp DECREMENT .)
    LESSTHAN        reduce using rule 29 (exp -> exp DECREMENT .)
    GREATERTHANOREQUALTO reduce using rule 29 (exp -> exp DECREMENT .)
    LESSTHANOREQUALTO reduce using rule 29 (exp -> exp DECREMENT .)
    EQUALTO         reduce using rule 29 (exp -> exp DECREMENT .)
    NOTEQUALTO      reduce using rule 29 (exp -> exp DECREMENT .)
    AND             reduce using rule 29 (exp -> exp DECREMENT .)
    OR              reduce using rule 29 (exp -> exp DECREMENT .)
    POW             reduce using rule 29 (exp -> exp DECREMENT .)
    INCREMENT       reduce using rule 29 (exp -> exp DECREMENT .)
    DECREMENT       reduce using rule 29 (exp -> exp DECREMENT .)
    NOT             reduce using rule 29 (exp -> exp DECREMENT .)
    RPAREN          reduce using rule 29 (exp -> exp DECREMENT .)


state 36

    (30) exp -> exp NOT .

    COMMA           reduce using rule 30 (exp -> exp NOT .)
    SEMICOL         reduce using rule 30 (exp -> exp NOT .)
    PLUS            reduce using rule 30 (exp -> exp NOT .)
    MINUS           reduce using rule 30 (exp -> exp NOT .)
    MULTIPLICATION  reduce using rule 30 (exp -> exp NOT .)
    DIVISION        reduce using rule 30 (exp -> exp NOT .)
    MODULO          reduce using rule 30 (exp -> exp NOT .)
    GREATERTHAN     reduce using rule 30 (exp -> exp NOT .)
    LESSTHAN        reduce using rule 30 (exp -> exp NOT .)
    GREATERTHANOREQUALTO reduce using rule 30 (exp -> exp NOT .)
    LESSTHANOREQUALTO reduce using rule 30 (exp -> exp NOT .)
    EQUALTO         reduce using rule 30 (exp -> exp NOT .)
    NOTEQUALTO      reduce using rule 30 (exp -> exp NOT .)
    AND             reduce using rule 30 (exp -> exp NOT .)
    OR              reduce using rule 30 (exp -> exp NOT .)
    POW             reduce using rule 30 (exp -> exp NOT .)
    INCREMENT       reduce using rule 30 (exp -> exp NOT .)
    DECREMENT       reduce using rule 30 (exp -> exp NOT .)
    NOT             reduce using rule 30 (exp -> exp NOT .)
    RPAREN          reduce using rule 30 (exp -> exp NOT .)


state 37

    (3) exp -> LPAREN . exp RPAREN
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 57

state 38

    (6) stmt -> PRINT LPAREN exp . RPAREN SEMICOL
    (3) exp -> LPAREN exp . RPAREN
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 39

    (32) exp -> MINUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 32 (exp -> MINUS exp .)
    SEMICOL         reduce using rule 32 (exp -> MINUS exp .)
    PLUS            reduce using rule 32 (exp -> MINUS exp .)
    MINUS           reduce using rule 32 (exp -> MINUS exp .)
    MULTIPLICATION  reduce using rule 32 (exp -> MINUS exp .)
    DIVISION        reduce using rule 32 (exp -> MINUS exp .)
    MODULO          reduce using rule 32 (exp -> MINUS exp .)
    GREATERTHAN     reduce using rule 32 (exp -> MINUS exp .)
    LESSTHAN        reduce using rule 32 (exp -> MINUS exp .)
    GREATERTHANOREQUALTO reduce using rule 32 (exp -> MINUS exp .)
    LESSTHANOREQUALTO reduce using rule 32 (exp -> MINUS exp .)
    EQUALTO         reduce using rule 32 (exp -> MINUS exp .)
    NOTEQUALTO      reduce using rule 32 (exp -> MINUS exp .)
    AND             reduce using rule 32 (exp -> MINUS exp .)
    OR              reduce using rule 32 (exp -> MINUS exp .)
    POW             reduce using rule 32 (exp -> MINUS exp .)
    INCREMENT       reduce using rule 32 (exp -> MINUS exp .)
    DECREMENT       reduce using rule 32 (exp -> MINUS exp .)
    NOT             reduce using rule 32 (exp -> MINUS exp .)
    RPAREN          reduce using rule 32 (exp -> MINUS exp .)

  ! PLUS            [ shift and go to state 20 ]
  ! MINUS           [ shift and go to state 21 ]
  ! MULTIPLICATION  [ shift and go to state 22 ]
  ! DIVISION        [ shift and go to state 23 ]
  ! MODULO          [ shift and go to state 24 ]
  ! GREATERTHAN     [ shift and go to state 25 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! GREATERTHANOREQUALTO [ shift and go to state 27 ]
  ! LESSTHANOREQUALTO [ shift and go to state 28 ]
  ! EQUALTO         [ shift and go to state 29 ]
  ! NOTEQUALTO      [ shift and go to state 30 ]
  ! COMMA           [ shift and go to state 59 ]
  ! AND             [ shift and go to state 31 ]
  ! OR              [ shift and go to state 32 ]
  ! POW             [ shift and go to state 33 ]
  ! INCREMENT       [ shift and go to state 34 ]
  ! DECREMENT       [ shift and go to state 35 ]
  ! NOT             [ shift and go to state 36 ]


state 40

    (7) stmt -> VARTYPE NAME ASSIGN . exp SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 60

state 41

    (33) stmt -> IF LPAREN exp . RPAREN LCURLY S RCURLY block
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 42

    (4) stmt -> PRINT exp COMMA exp . SEMICOL
    (24) exp -> exp COMMA exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

  ! shift/reduce conflict for SEMICOL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for NOTEQUALTO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    SEMICOL         shift and go to state 62
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! COMMA           [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! SEMICOL         [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! PLUS            [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MULTIPLICATION  [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! DIVISION        [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MODULO          [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! GREATERTHAN     [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! LESSTHAN        [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! EQUALTO         [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! NOTEQUALTO      [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! AND             [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! OR              [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! POW             [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! INCREMENT       [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! DECREMENT       [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! NOT             [ reduce using rule 24 (exp -> exp COMMA exp .) ]


state 43

    (13) exp -> exp PLUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 13 (exp -> exp PLUS exp .)
    SEMICOL         reduce using rule 13 (exp -> exp PLUS exp .)
    RPAREN          reduce using rule 13 (exp -> exp PLUS exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! MINUS           [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! MULTIPLICATION  [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! DIVISION        [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! MODULO          [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! GREATERTHAN     [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! LESSTHAN        [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! EQUALTO         [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! NOTEQUALTO      [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! AND             [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! OR              [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! POW             [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! INCREMENT       [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! DECREMENT       [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! NOT             [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 44

    (14) exp -> exp MINUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 14 (exp -> exp MINUS exp .)
    SEMICOL         reduce using rule 14 (exp -> exp MINUS exp .)
    RPAREN          reduce using rule 14 (exp -> exp MINUS exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! MINUS           [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! MULTIPLICATION  [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! DIVISION        [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! MODULO          [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! GREATERTHAN     [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! LESSTHAN        [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! EQUALTO         [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! NOTEQUALTO      [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! AND             [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! OR              [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! POW             [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! INCREMENT       [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! DECREMENT       [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! NOT             [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 45

    (15) exp -> exp MULTIPLICATION exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 15 (exp -> exp MULTIPLICATION exp .)
    SEMICOL         reduce using rule 15 (exp -> exp MULTIPLICATION exp .)
    RPAREN          reduce using rule 15 (exp -> exp MULTIPLICATION exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! MINUS           [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! MULTIPLICATION  [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! DIVISION        [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! MODULO          [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! GREATERTHAN     [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! LESSTHAN        [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! EQUALTO         [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! NOTEQUALTO      [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! AND             [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! OR              [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! POW             [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! INCREMENT       [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! DECREMENT       [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! NOT             [ reduce using rule 15 (exp -> exp MULTIPLICATION exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 46

    (16) exp -> exp DIVISION exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 16 (exp -> exp DIVISION exp .)
    SEMICOL         reduce using rule 16 (exp -> exp DIVISION exp .)
    RPAREN          reduce using rule 16 (exp -> exp DIVISION exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! MINUS           [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! MULTIPLICATION  [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! DIVISION        [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! MODULO          [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! GREATERTHAN     [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! LESSTHAN        [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! EQUALTO         [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! NOTEQUALTO      [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! AND             [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! OR              [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! POW             [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! INCREMENT       [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! DECREMENT       [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! NOT             [ reduce using rule 16 (exp -> exp DIVISION exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 47

    (17) exp -> exp MODULO exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 17 (exp -> exp MODULO exp .)
    SEMICOL         reduce using rule 17 (exp -> exp MODULO exp .)
    RPAREN          reduce using rule 17 (exp -> exp MODULO exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! MINUS           [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! DIVISION        [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! MODULO          [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! GREATERTHAN     [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! LESSTHAN        [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! EQUALTO         [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! AND             [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! OR              [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! POW             [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! INCREMENT       [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! DECREMENT       [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! NOT             [ reduce using rule 17 (exp -> exp MODULO exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 48

    (18) exp -> exp GREATERTHAN exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 18 (exp -> exp GREATERTHAN exp .)
    SEMICOL         reduce using rule 18 (exp -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 18 (exp -> exp GREATERTHAN exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! MINUS           [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! MULTIPLICATION  [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! DIVISION        [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! MODULO          [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! GREATERTHAN     [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! LESSTHAN        [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! EQUALTO         [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! NOTEQUALTO      [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! AND             [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! OR              [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! POW             [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! INCREMENT       [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! DECREMENT       [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! NOT             [ reduce using rule 18 (exp -> exp GREATERTHAN exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 49

    (19) exp -> exp LESSTHAN exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 19 (exp -> exp LESSTHAN exp .)
    SEMICOL         reduce using rule 19 (exp -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 19 (exp -> exp LESSTHAN exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! MINUS           [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! MULTIPLICATION  [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! DIVISION        [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! MODULO          [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! GREATERTHAN     [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! LESSTHAN        [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! EQUALTO         [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! NOTEQUALTO      [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! AND             [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! OR              [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! POW             [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! INCREMENT       [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! DECREMENT       [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! NOT             [ reduce using rule 19 (exp -> exp LESSTHAN exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 50

    (20) exp -> exp GREATERTHANOREQUALTO exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .)
    SEMICOL         reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .)
    RPAREN          reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MINUS           [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MODULO          [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! AND             [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! OR              [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! POW             [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! NOT             [ reduce using rule 20 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 51

    (21) exp -> exp LESSTHANOREQUALTO exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .)
    SEMICOL         reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .)
    RPAREN          reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MINUS           [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MODULO          [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! AND             [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! OR              [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! POW             [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! NOT             [ reduce using rule 21 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 52

    (22) exp -> exp EQUALTO exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 22 (exp -> exp EQUALTO exp .)
    SEMICOL         reduce using rule 22 (exp -> exp EQUALTO exp .)
    RPAREN          reduce using rule 22 (exp -> exp EQUALTO exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! MINUS           [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! MODULO          [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! AND             [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! OR              [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! POW             [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! NOT             [ reduce using rule 22 (exp -> exp EQUALTO exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 53

    (23) exp -> exp NOTEQUALTO exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 23 (exp -> exp NOTEQUALTO exp .)
    SEMICOL         reduce using rule 23 (exp -> exp NOTEQUALTO exp .)
    RPAREN          reduce using rule 23 (exp -> exp NOTEQUALTO exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! MINUS           [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! MODULO          [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! AND             [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! OR              [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! POW             [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! NOT             [ reduce using rule 23 (exp -> exp NOTEQUALTO exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 54

    (25) exp -> exp AND exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 25 (exp -> exp AND exp .)
    SEMICOL         reduce using rule 25 (exp -> exp AND exp .)
    RPAREN          reduce using rule 25 (exp -> exp AND exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! MINUS           [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! MULTIPLICATION  [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! DIVISION        [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! MODULO          [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! GREATERTHAN     [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! LESSTHAN        [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! EQUALTO         [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! NOTEQUALTO      [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! AND             [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! OR              [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! POW             [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! INCREMENT       [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! DECREMENT       [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! NOT             [ reduce using rule 25 (exp -> exp AND exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 55

    (26) exp -> exp OR exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 26 (exp -> exp OR exp .)
    SEMICOL         reduce using rule 26 (exp -> exp OR exp .)
    RPAREN          reduce using rule 26 (exp -> exp OR exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! MINUS           [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! MULTIPLICATION  [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! DIVISION        [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! MODULO          [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! GREATERTHAN     [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! LESSTHAN        [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! EQUALTO         [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! NOTEQUALTO      [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! OR              [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! POW             [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! INCREMENT       [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! DECREMENT       [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! NOT             [ reduce using rule 26 (exp -> exp OR exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 56

    (27) exp -> exp POW exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    COMMA           reduce using rule 27 (exp -> exp POW exp .)
    SEMICOL         reduce using rule 27 (exp -> exp POW exp .)
    RPAREN          reduce using rule 27 (exp -> exp POW exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! MINUS           [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! MULTIPLICATION  [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! DIVISION        [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! MODULO          [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! GREATERTHAN     [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! LESSTHAN        [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! EQUALTO         [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! NOTEQUALTO      [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! AND             [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! OR              [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! POW             [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! INCREMENT       [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! DECREMENT       [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! NOT             [ reduce using rule 27 (exp -> exp POW exp .) ]
  ! COMMA           [ shift and go to state 59 ]


state 57

    (3) exp -> LPAREN exp . RPAREN
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 58

    (6) stmt -> PRINT LPAREN exp RPAREN . SEMICOL
    (3) exp -> LPAREN exp RPAREN .

    COMMA           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MULTIPLICATION  reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DIVISION        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MODULO          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHAN     reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHAN        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    EQUALTO         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOTEQUALTO      reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    OR              reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    POW             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    INCREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DECREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOT             reduce using rule 3 (exp -> LPAREN exp RPAREN .)

  ! SEMICOL         [ shift and go to state 64 ]


state 59

    (24) exp -> exp COMMA . exp
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 65

state 60

    (7) stmt -> VARTYPE NAME ASSIGN exp . SEMICOL
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    SEMICOL         shift and go to state 66
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 61

    (33) stmt -> IF LPAREN exp RPAREN . LCURLY S RCURLY block

    LCURLY          shift and go to state 67


state 62

    (4) stmt -> PRINT exp COMMA exp SEMICOL .

    PRINT           reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    VARTYPE         reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    IF              reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    $end            reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    RCURLY          reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)


state 63

    (3) exp -> LPAREN exp RPAREN .

    RPAREN          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MULTIPLICATION  reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DIVISION        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MODULO          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHAN     reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHAN        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    EQUALTO         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOTEQUALTO      reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    OR              reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    POW             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    INCREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DECREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOT             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 3 (exp -> LPAREN exp RPAREN .)


state 64

    (6) stmt -> PRINT LPAREN exp RPAREN SEMICOL .

    PRINT           reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    VARTYPE         reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    IF              reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    $end            reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    RCURLY          reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)


state 65

    (24) exp -> exp COMMA exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for NOTEQUALTO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    RPAREN          reduce using rule 24 (exp -> exp COMMA exp .)
    SEMICOL         reduce using rule 24 (exp -> exp COMMA exp .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36

  ! PLUS            [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MULTIPLICATION  [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! DIVISION        [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! MODULO          [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! GREATERTHAN     [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! LESSTHAN        [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! EQUALTO         [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! NOTEQUALTO      [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! COMMA           [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! AND             [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! OR              [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! POW             [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! INCREMENT       [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! DECREMENT       [ reduce using rule 24 (exp -> exp COMMA exp .) ]
  ! NOT             [ reduce using rule 24 (exp -> exp COMMA exp .) ]


state 66

    (7) stmt -> VARTYPE NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 7 (stmt -> VARTYPE NAME ASSIGN exp SEMICOL .)
    VARTYPE         reduce using rule 7 (stmt -> VARTYPE NAME ASSIGN exp SEMICOL .)
    IF              reduce using rule 7 (stmt -> VARTYPE NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 7 (stmt -> VARTYPE NAME ASSIGN exp SEMICOL .)
    RCURLY          reduce using rule 7 (stmt -> VARTYPE NAME ASSIGN exp SEMICOL .)


state 67

    (33) stmt -> IF LPAREN exp RPAREN LCURLY . S RCURLY block
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . VARTYPE NAME ASSIGN exp SEMICOL
    (33) stmt -> . IF LPAREN exp RPAREN LCURLY S RCURLY block

    RCURLY          reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    VARTYPE         shift and go to state 4
    IF              shift and go to state 5

    S                              shift and go to state 68
    stmt                           shift and go to state 2

state 68

    (33) stmt -> IF LPAREN exp RPAREN LCURLY S . RCURLY block

    RCURLY          shift and go to state 69


state 69

    (33) stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY . block
    (34) block -> . ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block
    (35) block -> . ELSE LCURLY S RCURLY
    (36) block -> .

    ELSEIF          shift and go to state 71
    ELSE            shift and go to state 72
    PRINT           reduce using rule 36 (block -> .)
    VARTYPE         reduce using rule 36 (block -> .)
    IF              reduce using rule 36 (block -> .)
    $end            reduce using rule 36 (block -> .)
    RCURLY          reduce using rule 36 (block -> .)

    block                          shift and go to state 70

state 70

    (33) stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .

    PRINT           reduce using rule 33 (stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .)
    VARTYPE         reduce using rule 33 (stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .)
    IF              reduce using rule 33 (stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .)
    $end            reduce using rule 33 (stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .)
    RCURLY          reduce using rule 33 (stmt -> IF LPAREN exp RPAREN LCURLY S RCURLY block .)


state 71

    (34) block -> ELSEIF . LPAREN exp RPAREN LCURLY S RCURLY block

    LPAREN          shift and go to state 73


state 72

    (35) block -> ELSE . LCURLY S RCURLY

    LCURLY          shift and go to state 74


state 73

    (34) block -> ELSEIF LPAREN . exp RPAREN LCURLY S RCURLY block
    (3) exp -> . LPAREN exp RPAREN
    (8) exp -> . FLOAT
    (9) exp -> . INT
    (10) exp -> . BOOL
    (11) exp -> . CHAR
    (12) exp -> . NAME
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLICATION exp
    (16) exp -> . exp DIVISION exp
    (17) exp -> . exp MODULO exp
    (18) exp -> . exp GREATERTHAN exp
    (19) exp -> . exp LESSTHAN exp
    (20) exp -> . exp GREATERTHANOREQUALTO exp
    (21) exp -> . exp LESSTHANOREQUALTO exp
    (22) exp -> . exp EQUALTO exp
    (23) exp -> . exp NOTEQUALTO exp
    (24) exp -> . exp COMMA exp
    (25) exp -> . exp AND exp
    (26) exp -> . exp OR exp
    (27) exp -> . exp POW exp
    (28) exp -> . exp INCREMENT
    (29) exp -> . exp DECREMENT
    (30) exp -> . exp NOT
    (31) exp -> . STRING
    (32) exp -> . MINUS exp

    LPAREN          shift and go to state 37
    FLOAT           shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    CHAR            shift and go to state 12
    NAME            shift and go to state 13
    STRING          shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 75

state 74

    (35) block -> ELSE LCURLY . S RCURLY
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . VARTYPE NAME ASSIGN exp SEMICOL
    (33) stmt -> . IF LPAREN exp RPAREN LCURLY S RCURLY block

    RCURLY          reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    VARTYPE         shift and go to state 4
    IF              shift and go to state 5

    S                              shift and go to state 76
    stmt                           shift and go to state 2

state 75

    (34) block -> ELSEIF LPAREN exp . RPAREN LCURLY S RCURLY block
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLICATION exp
    (16) exp -> exp . DIVISION exp
    (17) exp -> exp . MODULO exp
    (18) exp -> exp . GREATERTHAN exp
    (19) exp -> exp . LESSTHAN exp
    (20) exp -> exp . GREATERTHANOREQUALTO exp
    (21) exp -> exp . LESSTHANOREQUALTO exp
    (22) exp -> exp . EQUALTO exp
    (23) exp -> exp . NOTEQUALTO exp
    (24) exp -> exp . COMMA exp
    (25) exp -> exp . AND exp
    (26) exp -> exp . OR exp
    (27) exp -> exp . POW exp
    (28) exp -> exp . INCREMENT
    (29) exp -> exp . DECREMENT
    (30) exp -> exp . NOT

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    MULTIPLICATION  shift and go to state 22
    DIVISION        shift and go to state 23
    MODULO          shift and go to state 24
    GREATERTHAN     shift and go to state 25
    LESSTHAN        shift and go to state 26
    GREATERTHANOREQUALTO shift and go to state 27
    LESSTHANOREQUALTO shift and go to state 28
    EQUALTO         shift and go to state 29
    NOTEQUALTO      shift and go to state 30
    COMMA           shift and go to state 59
    AND             shift and go to state 31
    OR              shift and go to state 32
    POW             shift and go to state 33
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NOT             shift and go to state 36


state 76

    (35) block -> ELSE LCURLY S . RCURLY

    RCURLY          shift and go to state 78


state 77

    (34) block -> ELSEIF LPAREN exp RPAREN . LCURLY S RCURLY block

    LCURLY          shift and go to state 79


state 78

    (35) block -> ELSE LCURLY S RCURLY .

    PRINT           reduce using rule 35 (block -> ELSE LCURLY S RCURLY .)
    VARTYPE         reduce using rule 35 (block -> ELSE LCURLY S RCURLY .)
    IF              reduce using rule 35 (block -> ELSE LCURLY S RCURLY .)
    $end            reduce using rule 35 (block -> ELSE LCURLY S RCURLY .)
    RCURLY          reduce using rule 35 (block -> ELSE LCURLY S RCURLY .)


state 79

    (34) block -> ELSEIF LPAREN exp RPAREN LCURLY . S RCURLY block
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . VARTYPE NAME ASSIGN exp SEMICOL
    (33) stmt -> . IF LPAREN exp RPAREN LCURLY S RCURLY block

    RCURLY          reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    VARTYPE         shift and go to state 4
    IF              shift and go to state 5

    S                              shift and go to state 80
    stmt                           shift and go to state 2

state 80

    (34) block -> ELSEIF LPAREN exp RPAREN LCURLY S . RCURLY block

    RCURLY          shift and go to state 81


state 81

    (34) block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY . block
    (34) block -> . ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block
    (35) block -> . ELSE LCURLY S RCURLY
    (36) block -> .

    ELSEIF          shift and go to state 71
    ELSE            shift and go to state 72
    PRINT           reduce using rule 36 (block -> .)
    VARTYPE         reduce using rule 36 (block -> .)
    IF              reduce using rule 36 (block -> .)
    $end            reduce using rule 36 (block -> .)
    RCURLY          reduce using rule 36 (block -> .)

    block                          shift and go to state 82

state 82

    (34) block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .

    PRINT           reduce using rule 34 (block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .)
    VARTYPE         reduce using rule 34 (block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .)
    IF              reduce using rule 34 (block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .)
    $end            reduce using rule 34 (block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .)
    RCURLY          reduce using rule 34 (block -> ELSEIF LPAREN exp RPAREN LCURLY S RCURLY block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOL in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 42 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 42 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 42 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 42 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUALTO in state 42 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUALTO in state 42 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 42 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALTO in state 42 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for POW in state 42 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 42 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 42 resolved as shift
WARNING: shift/reduce conflict for NOT in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 65 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUALTO in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUALTO in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 65 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALTO in state 65 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for POW in state 65 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 65 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
