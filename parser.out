Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEF
    DOWHILE
    ELSE
    ELSEIF
    IF
    LCURLY
    RCURLY

Grammar

Rule 0     S' -> S
Rule 1     S -> stmt S
Rule 2     S -> <empty>
Rule 3     exp -> LPAREN exp RPAREN
Rule 4     stmt -> PRINT exp COMMA exp SEMICOL
Rule 5     stmt -> PRINT exp SEMICOL
Rule 6     stmt -> PRINT LPAREN exp RPAREN SEMICOL
Rule 7     stmt -> INT NAME ASSIGN exp SEMICOL
Rule 8     stmt -> FLOAT NAME ASSIGN exp SEMICOL
Rule 9     stmt -> CHAR NAME ASSIGN exp SEMICOL
Rule 10    stmt -> STRING NAME ASSIGN exp SEMICOL
Rule 11    stmt -> BOOL NAME ASSIGN exp SEMICOL
Rule 12    stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL
Rule 13    stmt -> INT NAME ASSIGN INT SEMICOL
Rule 14    stmt -> STRING NAME ASSIGN STRING SEMICOL
Rule 15    stmt -> CHAR NAME ASSIGN CHAR SEMICOL
Rule 16    stmt -> BOOL NAME ASSIGN BOOL SEMICOL
Rule 17    exp -> FLOAT
Rule 18    exp -> INT
Rule 19    exp -> exp PLUS exp
Rule 20    exp -> exp MINUS exp
Rule 21    exp -> exp MULTIPLICATION exp
Rule 22    exp -> exp DIVISION exp
Rule 23    exp -> exp MODULO exp
Rule 24    exp -> exp GREATERTHAN exp
Rule 25    exp -> exp LESSTHAN exp
Rule 26    exp -> exp GREATERTHANOREQUALTO exp
Rule 27    exp -> exp LESSTHANOREQUALTO exp
Rule 28    exp -> exp EQUALTO exp
Rule 29    exp -> exp NOTEQUALTO exp
Rule 30    exp -> exp COMMA exp
Rule 31    exp -> exp AND exp
Rule 32    exp -> exp OR exp
Rule 33    exp -> exp POW exp
Rule 34    exp -> exp INCREMENT
Rule 35    exp -> exp DECREMENT
Rule 36    exp -> exp NOT
Rule 37    exp -> NAME
Rule 38    exp -> STRING
Rule 39    exp -> MINUS exp

Terminals, with rules where they appear

AND                  : 31
ASSIGN               : 7 8 9 10 11 12 13 14 15 16
BOOL                 : 11 16 16
CHAR                 : 9 15 15
COMMA                : 4 30
DECREMENT            : 35
DEF                  : 
DIVISION             : 22
DOWHILE              : 
ELSE                 : 
ELSEIF               : 
EQUALTO              : 28
FLOAT                : 8 12 12 17
GREATERTHAN          : 24
GREATERTHANOREQUALTO : 26
IF                   : 
INCREMENT            : 34
INT                  : 7 13 13 18
LCURLY               : 
LESSTHAN             : 25
LESSTHANOREQUALTO    : 27
LPAREN               : 3 6
MINUS                : 20 39
MODULO               : 23
MULTIPLICATION       : 21
NAME                 : 7 8 9 10 11 12 13 14 15 16 37
NOT                  : 36
NOTEQUALTO           : 29
OR                   : 32
PLUS                 : 19
POW                  : 33
PRINT                : 4 5 6
RCURLY               : 
RPAREN               : 3 6
SEMICOL              : 4 5 6 7 8 9 10 11 12 13 14 15 16
STRING               : 10 14 14 38
error                : 

Nonterminals, with rules where they appear

S                    : 1 0
exp                  : 3 4 4 5 6 7 8 9 10 11 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 36 39
stmt                 : 1

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . INT NAME ASSIGN exp SEMICOL
    (8) stmt -> . FLOAT NAME ASSIGN exp SEMICOL
    (9) stmt -> . CHAR NAME ASSIGN exp SEMICOL
    (10) stmt -> . STRING NAME ASSIGN exp SEMICOL
    (11) stmt -> . BOOL NAME ASSIGN exp SEMICOL
    (12) stmt -> . FLOAT NAME ASSIGN FLOAT SEMICOL
    (13) stmt -> . INT NAME ASSIGN INT SEMICOL
    (14) stmt -> . STRING NAME ASSIGN STRING SEMICOL
    (15) stmt -> . CHAR NAME ASSIGN CHAR SEMICOL
    (16) stmt -> . BOOL NAME ASSIGN BOOL SEMICOL

    $end            reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    CHAR            shift and go to state 6
    STRING          shift and go to state 7
    BOOL            shift and go to state 8

    S                              shift and go to state 1
    stmt                           shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> stmt . S
    (1) S -> . stmt S
    (2) S -> .
    (4) stmt -> . PRINT exp COMMA exp SEMICOL
    (5) stmt -> . PRINT exp SEMICOL
    (6) stmt -> . PRINT LPAREN exp RPAREN SEMICOL
    (7) stmt -> . INT NAME ASSIGN exp SEMICOL
    (8) stmt -> . FLOAT NAME ASSIGN exp SEMICOL
    (9) stmt -> . CHAR NAME ASSIGN exp SEMICOL
    (10) stmt -> . STRING NAME ASSIGN exp SEMICOL
    (11) stmt -> . BOOL NAME ASSIGN exp SEMICOL
    (12) stmt -> . FLOAT NAME ASSIGN FLOAT SEMICOL
    (13) stmt -> . INT NAME ASSIGN INT SEMICOL
    (14) stmt -> . STRING NAME ASSIGN STRING SEMICOL
    (15) stmt -> . CHAR NAME ASSIGN CHAR SEMICOL
    (16) stmt -> . BOOL NAME ASSIGN BOOL SEMICOL

    $end            reduce using rule 2 (S -> .)
    PRINT           shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    CHAR            shift and go to state 6
    STRING          shift and go to state 7
    BOOL            shift and go to state 8

    stmt                           shift and go to state 2
    S                              shift and go to state 9

state 3

    (4) stmt -> PRINT . exp COMMA exp SEMICOL
    (5) stmt -> PRINT . exp SEMICOL
    (6) stmt -> PRINT . LPAREN exp RPAREN SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 11
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 10

state 4

    (7) stmt -> INT . NAME ASSIGN exp SEMICOL
    (13) stmt -> INT . NAME ASSIGN INT SEMICOL

    NAME            shift and go to state 17


state 5

    (8) stmt -> FLOAT . NAME ASSIGN exp SEMICOL
    (12) stmt -> FLOAT . NAME ASSIGN FLOAT SEMICOL

    NAME            shift and go to state 18


state 6

    (9) stmt -> CHAR . NAME ASSIGN exp SEMICOL
    (15) stmt -> CHAR . NAME ASSIGN CHAR SEMICOL

    NAME            shift and go to state 19


state 7

    (10) stmt -> STRING . NAME ASSIGN exp SEMICOL
    (14) stmt -> STRING . NAME ASSIGN STRING SEMICOL

    NAME            shift and go to state 20


state 8

    (11) stmt -> BOOL . NAME ASSIGN exp SEMICOL
    (16) stmt -> BOOL . NAME ASSIGN BOOL SEMICOL

    NAME            shift and go to state 21


state 9

    (1) S -> stmt S .

    $end            reduce using rule 1 (S -> stmt S .)


state 10

    (4) stmt -> PRINT exp . COMMA exp SEMICOL
    (5) stmt -> PRINT exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           shift and go to state 22
    SEMICOL         shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 11

    (6) stmt -> PRINT LPAREN . exp RPAREN SEMICOL
    (3) exp -> LPAREN . exp RPAREN
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 42

state 12

    (17) exp -> FLOAT .

    COMMA           reduce using rule 17 (exp -> FLOAT .)
    SEMICOL         reduce using rule 17 (exp -> FLOAT .)
    PLUS            reduce using rule 17 (exp -> FLOAT .)
    MINUS           reduce using rule 17 (exp -> FLOAT .)
    MULTIPLICATION  reduce using rule 17 (exp -> FLOAT .)
    DIVISION        reduce using rule 17 (exp -> FLOAT .)
    MODULO          reduce using rule 17 (exp -> FLOAT .)
    GREATERTHAN     reduce using rule 17 (exp -> FLOAT .)
    LESSTHAN        reduce using rule 17 (exp -> FLOAT .)
    GREATERTHANOREQUALTO reduce using rule 17 (exp -> FLOAT .)
    LESSTHANOREQUALTO reduce using rule 17 (exp -> FLOAT .)
    EQUALTO         reduce using rule 17 (exp -> FLOAT .)
    NOTEQUALTO      reduce using rule 17 (exp -> FLOAT .)
    AND             reduce using rule 17 (exp -> FLOAT .)
    OR              reduce using rule 17 (exp -> FLOAT .)
    POW             reduce using rule 17 (exp -> FLOAT .)
    INCREMENT       reduce using rule 17 (exp -> FLOAT .)
    DECREMENT       reduce using rule 17 (exp -> FLOAT .)
    NOT             reduce using rule 17 (exp -> FLOAT .)
    RPAREN          reduce using rule 17 (exp -> FLOAT .)


state 13

    (18) exp -> INT .

    COMMA           reduce using rule 18 (exp -> INT .)
    SEMICOL         reduce using rule 18 (exp -> INT .)
    PLUS            reduce using rule 18 (exp -> INT .)
    MINUS           reduce using rule 18 (exp -> INT .)
    MULTIPLICATION  reduce using rule 18 (exp -> INT .)
    DIVISION        reduce using rule 18 (exp -> INT .)
    MODULO          reduce using rule 18 (exp -> INT .)
    GREATERTHAN     reduce using rule 18 (exp -> INT .)
    LESSTHAN        reduce using rule 18 (exp -> INT .)
    GREATERTHANOREQUALTO reduce using rule 18 (exp -> INT .)
    LESSTHANOREQUALTO reduce using rule 18 (exp -> INT .)
    EQUALTO         reduce using rule 18 (exp -> INT .)
    NOTEQUALTO      reduce using rule 18 (exp -> INT .)
    AND             reduce using rule 18 (exp -> INT .)
    OR              reduce using rule 18 (exp -> INT .)
    POW             reduce using rule 18 (exp -> INT .)
    INCREMENT       reduce using rule 18 (exp -> INT .)
    DECREMENT       reduce using rule 18 (exp -> INT .)
    NOT             reduce using rule 18 (exp -> INT .)
    RPAREN          reduce using rule 18 (exp -> INT .)


state 14

    (39) exp -> MINUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 43

state 15

    (37) exp -> NAME .

    COMMA           reduce using rule 37 (exp -> NAME .)
    SEMICOL         reduce using rule 37 (exp -> NAME .)
    PLUS            reduce using rule 37 (exp -> NAME .)
    MINUS           reduce using rule 37 (exp -> NAME .)
    MULTIPLICATION  reduce using rule 37 (exp -> NAME .)
    DIVISION        reduce using rule 37 (exp -> NAME .)
    MODULO          reduce using rule 37 (exp -> NAME .)
    GREATERTHAN     reduce using rule 37 (exp -> NAME .)
    LESSTHAN        reduce using rule 37 (exp -> NAME .)
    GREATERTHANOREQUALTO reduce using rule 37 (exp -> NAME .)
    LESSTHANOREQUALTO reduce using rule 37 (exp -> NAME .)
    EQUALTO         reduce using rule 37 (exp -> NAME .)
    NOTEQUALTO      reduce using rule 37 (exp -> NAME .)
    AND             reduce using rule 37 (exp -> NAME .)
    OR              reduce using rule 37 (exp -> NAME .)
    POW             reduce using rule 37 (exp -> NAME .)
    INCREMENT       reduce using rule 37 (exp -> NAME .)
    DECREMENT       reduce using rule 37 (exp -> NAME .)
    NOT             reduce using rule 37 (exp -> NAME .)
    RPAREN          reduce using rule 37 (exp -> NAME .)


state 16

    (38) exp -> STRING .

    COMMA           reduce using rule 38 (exp -> STRING .)
    SEMICOL         reduce using rule 38 (exp -> STRING .)
    PLUS            reduce using rule 38 (exp -> STRING .)
    MINUS           reduce using rule 38 (exp -> STRING .)
    MULTIPLICATION  reduce using rule 38 (exp -> STRING .)
    DIVISION        reduce using rule 38 (exp -> STRING .)
    MODULO          reduce using rule 38 (exp -> STRING .)
    GREATERTHAN     reduce using rule 38 (exp -> STRING .)
    LESSTHAN        reduce using rule 38 (exp -> STRING .)
    GREATERTHANOREQUALTO reduce using rule 38 (exp -> STRING .)
    LESSTHANOREQUALTO reduce using rule 38 (exp -> STRING .)
    EQUALTO         reduce using rule 38 (exp -> STRING .)
    NOTEQUALTO      reduce using rule 38 (exp -> STRING .)
    AND             reduce using rule 38 (exp -> STRING .)
    OR              reduce using rule 38 (exp -> STRING .)
    POW             reduce using rule 38 (exp -> STRING .)
    INCREMENT       reduce using rule 38 (exp -> STRING .)
    DECREMENT       reduce using rule 38 (exp -> STRING .)
    NOT             reduce using rule 38 (exp -> STRING .)
    RPAREN          reduce using rule 38 (exp -> STRING .)


state 17

    (7) stmt -> INT NAME . ASSIGN exp SEMICOL
    (13) stmt -> INT NAME . ASSIGN INT SEMICOL

    ASSIGN          shift and go to state 44


state 18

    (8) stmt -> FLOAT NAME . ASSIGN exp SEMICOL
    (12) stmt -> FLOAT NAME . ASSIGN FLOAT SEMICOL

    ASSIGN          shift and go to state 45


state 19

    (9) stmt -> CHAR NAME . ASSIGN exp SEMICOL
    (15) stmt -> CHAR NAME . ASSIGN CHAR SEMICOL

    ASSIGN          shift and go to state 46


state 20

    (10) stmt -> STRING NAME . ASSIGN exp SEMICOL
    (14) stmt -> STRING NAME . ASSIGN STRING SEMICOL

    ASSIGN          shift and go to state 47


state 21

    (11) stmt -> BOOL NAME . ASSIGN exp SEMICOL
    (16) stmt -> BOOL NAME . ASSIGN BOOL SEMICOL

    ASSIGN          shift and go to state 48


state 22

    (4) stmt -> PRINT exp COMMA . exp SEMICOL
    (30) exp -> exp COMMA . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 49

state 23

    (5) stmt -> PRINT exp SEMICOL .

    PRINT           reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    INT             reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    FLOAT           reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    CHAR            reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    STRING          reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    BOOL            reduce using rule 5 (stmt -> PRINT exp SEMICOL .)
    $end            reduce using rule 5 (stmt -> PRINT exp SEMICOL .)


state 24

    (19) exp -> exp PLUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 50

state 25

    (20) exp -> exp MINUS . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 51

state 26

    (21) exp -> exp MULTIPLICATION . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 52

state 27

    (22) exp -> exp DIVISION . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 53

state 28

    (23) exp -> exp MODULO . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 54

state 29

    (24) exp -> exp GREATERTHAN . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 55

state 30

    (25) exp -> exp LESSTHAN . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 56

state 31

    (26) exp -> exp GREATERTHANOREQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 57

state 32

    (27) exp -> exp LESSTHANOREQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 58

state 33

    (28) exp -> exp EQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 59

state 34

    (29) exp -> exp NOTEQUALTO . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 60

state 35

    (31) exp -> exp AND . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 61

state 36

    (32) exp -> exp OR . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 62

state 37

    (33) exp -> exp POW . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 63

state 38

    (34) exp -> exp INCREMENT .

    COMMA           reduce using rule 34 (exp -> exp INCREMENT .)
    SEMICOL         reduce using rule 34 (exp -> exp INCREMENT .)
    PLUS            reduce using rule 34 (exp -> exp INCREMENT .)
    MINUS           reduce using rule 34 (exp -> exp INCREMENT .)
    MULTIPLICATION  reduce using rule 34 (exp -> exp INCREMENT .)
    DIVISION        reduce using rule 34 (exp -> exp INCREMENT .)
    MODULO          reduce using rule 34 (exp -> exp INCREMENT .)
    GREATERTHAN     reduce using rule 34 (exp -> exp INCREMENT .)
    LESSTHAN        reduce using rule 34 (exp -> exp INCREMENT .)
    GREATERTHANOREQUALTO reduce using rule 34 (exp -> exp INCREMENT .)
    LESSTHANOREQUALTO reduce using rule 34 (exp -> exp INCREMENT .)
    EQUALTO         reduce using rule 34 (exp -> exp INCREMENT .)
    NOTEQUALTO      reduce using rule 34 (exp -> exp INCREMENT .)
    AND             reduce using rule 34 (exp -> exp INCREMENT .)
    OR              reduce using rule 34 (exp -> exp INCREMENT .)
    POW             reduce using rule 34 (exp -> exp INCREMENT .)
    INCREMENT       reduce using rule 34 (exp -> exp INCREMENT .)
    DECREMENT       reduce using rule 34 (exp -> exp INCREMENT .)
    NOT             reduce using rule 34 (exp -> exp INCREMENT .)
    RPAREN          reduce using rule 34 (exp -> exp INCREMENT .)


state 39

    (35) exp -> exp DECREMENT .

    COMMA           reduce using rule 35 (exp -> exp DECREMENT .)
    SEMICOL         reduce using rule 35 (exp -> exp DECREMENT .)
    PLUS            reduce using rule 35 (exp -> exp DECREMENT .)
    MINUS           reduce using rule 35 (exp -> exp DECREMENT .)
    MULTIPLICATION  reduce using rule 35 (exp -> exp DECREMENT .)
    DIVISION        reduce using rule 35 (exp -> exp DECREMENT .)
    MODULO          reduce using rule 35 (exp -> exp DECREMENT .)
    GREATERTHAN     reduce using rule 35 (exp -> exp DECREMENT .)
    LESSTHAN        reduce using rule 35 (exp -> exp DECREMENT .)
    GREATERTHANOREQUALTO reduce using rule 35 (exp -> exp DECREMENT .)
    LESSTHANOREQUALTO reduce using rule 35 (exp -> exp DECREMENT .)
    EQUALTO         reduce using rule 35 (exp -> exp DECREMENT .)
    NOTEQUALTO      reduce using rule 35 (exp -> exp DECREMENT .)
    AND             reduce using rule 35 (exp -> exp DECREMENT .)
    OR              reduce using rule 35 (exp -> exp DECREMENT .)
    POW             reduce using rule 35 (exp -> exp DECREMENT .)
    INCREMENT       reduce using rule 35 (exp -> exp DECREMENT .)
    DECREMENT       reduce using rule 35 (exp -> exp DECREMENT .)
    NOT             reduce using rule 35 (exp -> exp DECREMENT .)
    RPAREN          reduce using rule 35 (exp -> exp DECREMENT .)


state 40

    (36) exp -> exp NOT .

    COMMA           reduce using rule 36 (exp -> exp NOT .)
    SEMICOL         reduce using rule 36 (exp -> exp NOT .)
    PLUS            reduce using rule 36 (exp -> exp NOT .)
    MINUS           reduce using rule 36 (exp -> exp NOT .)
    MULTIPLICATION  reduce using rule 36 (exp -> exp NOT .)
    DIVISION        reduce using rule 36 (exp -> exp NOT .)
    MODULO          reduce using rule 36 (exp -> exp NOT .)
    GREATERTHAN     reduce using rule 36 (exp -> exp NOT .)
    LESSTHAN        reduce using rule 36 (exp -> exp NOT .)
    GREATERTHANOREQUALTO reduce using rule 36 (exp -> exp NOT .)
    LESSTHANOREQUALTO reduce using rule 36 (exp -> exp NOT .)
    EQUALTO         reduce using rule 36 (exp -> exp NOT .)
    NOTEQUALTO      reduce using rule 36 (exp -> exp NOT .)
    AND             reduce using rule 36 (exp -> exp NOT .)
    OR              reduce using rule 36 (exp -> exp NOT .)
    POW             reduce using rule 36 (exp -> exp NOT .)
    INCREMENT       reduce using rule 36 (exp -> exp NOT .)
    DECREMENT       reduce using rule 36 (exp -> exp NOT .)
    NOT             reduce using rule 36 (exp -> exp NOT .)
    RPAREN          reduce using rule 36 (exp -> exp NOT .)


state 41

    (3) exp -> LPAREN . exp RPAREN
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 64

state 42

    (6) stmt -> PRINT LPAREN exp . RPAREN SEMICOL
    (3) exp -> LPAREN exp . RPAREN
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    RPAREN          shift and go to state 65
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 43

    (39) exp -> MINUS exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 39 (exp -> MINUS exp .)
    SEMICOL         reduce using rule 39 (exp -> MINUS exp .)
    PLUS            reduce using rule 39 (exp -> MINUS exp .)
    MINUS           reduce using rule 39 (exp -> MINUS exp .)
    MULTIPLICATION  reduce using rule 39 (exp -> MINUS exp .)
    DIVISION        reduce using rule 39 (exp -> MINUS exp .)
    MODULO          reduce using rule 39 (exp -> MINUS exp .)
    GREATERTHAN     reduce using rule 39 (exp -> MINUS exp .)
    LESSTHAN        reduce using rule 39 (exp -> MINUS exp .)
    GREATERTHANOREQUALTO reduce using rule 39 (exp -> MINUS exp .)
    LESSTHANOREQUALTO reduce using rule 39 (exp -> MINUS exp .)
    EQUALTO         reduce using rule 39 (exp -> MINUS exp .)
    NOTEQUALTO      reduce using rule 39 (exp -> MINUS exp .)
    AND             reduce using rule 39 (exp -> MINUS exp .)
    OR              reduce using rule 39 (exp -> MINUS exp .)
    POW             reduce using rule 39 (exp -> MINUS exp .)
    INCREMENT       reduce using rule 39 (exp -> MINUS exp .)
    DECREMENT       reduce using rule 39 (exp -> MINUS exp .)
    NOT             reduce using rule 39 (exp -> MINUS exp .)
    RPAREN          reduce using rule 39 (exp -> MINUS exp .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! MULTIPLICATION  [ shift and go to state 26 ]
  ! DIVISION        [ shift and go to state 27 ]
  ! MODULO          [ shift and go to state 28 ]
  ! GREATERTHAN     [ shift and go to state 29 ]
  ! LESSTHAN        [ shift and go to state 30 ]
  ! GREATERTHANOREQUALTO [ shift and go to state 31 ]
  ! LESSTHANOREQUALTO [ shift and go to state 32 ]
  ! EQUALTO         [ shift and go to state 33 ]
  ! NOTEQUALTO      [ shift and go to state 34 ]
  ! COMMA           [ shift and go to state 66 ]
  ! AND             [ shift and go to state 35 ]
  ! OR              [ shift and go to state 36 ]
  ! POW             [ shift and go to state 37 ]
  ! INCREMENT       [ shift and go to state 38 ]
  ! DECREMENT       [ shift and go to state 39 ]
  ! NOT             [ shift and go to state 40 ]


state 44

    (7) stmt -> INT NAME ASSIGN . exp SEMICOL
    (13) stmt -> INT NAME ASSIGN . INT SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    INT             shift and go to state 67
    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 68

state 45

    (8) stmt -> FLOAT NAME ASSIGN . exp SEMICOL
    (12) stmt -> FLOAT NAME ASSIGN . FLOAT SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    FLOAT           shift and go to state 69
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 70

state 46

    (9) stmt -> CHAR NAME ASSIGN . exp SEMICOL
    (15) stmt -> CHAR NAME ASSIGN . CHAR SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    CHAR            shift and go to state 71
    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 72

state 47

    (10) stmt -> STRING NAME ASSIGN . exp SEMICOL
    (14) stmt -> STRING NAME ASSIGN . STRING SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    STRING          shift and go to state 73
    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    MINUS           shift and go to state 14

    exp                            shift and go to state 74

state 48

    (11) stmt -> BOOL NAME ASSIGN . exp SEMICOL
    (16) stmt -> BOOL NAME ASSIGN . BOOL SEMICOL
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    BOOL            shift and go to state 75
    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 76

state 49

    (4) stmt -> PRINT exp COMMA exp . SEMICOL
    (30) exp -> exp COMMA exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

  ! shift/reduce conflict for SEMICOL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for NOTEQUALTO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    SEMICOL         shift and go to state 77
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! COMMA           [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! SEMICOL         [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! PLUS            [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MINUS           [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MULTIPLICATION  [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! DIVISION        [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MODULO          [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! GREATERTHAN     [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! LESSTHAN        [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! EQUALTO         [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! NOTEQUALTO      [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! AND             [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! OR              [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! POW             [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! INCREMENT       [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! DECREMENT       [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! NOT             [ reduce using rule 30 (exp -> exp COMMA exp .) ]


state 50

    (19) exp -> exp PLUS exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 19 (exp -> exp PLUS exp .)
    SEMICOL         reduce using rule 19 (exp -> exp PLUS exp .)
    RPAREN          reduce using rule 19 (exp -> exp PLUS exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! MINUS           [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! MULTIPLICATION  [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! DIVISION        [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! MODULO          [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! GREATERTHAN     [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! LESSTHAN        [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! EQUALTO         [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! NOTEQUALTO      [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! AND             [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! OR              [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! POW             [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! INCREMENT       [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! DECREMENT       [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! NOT             [ reduce using rule 19 (exp -> exp PLUS exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 51

    (20) exp -> exp MINUS exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 20 (exp -> exp MINUS exp .)
    SEMICOL         reduce using rule 20 (exp -> exp MINUS exp .)
    RPAREN          reduce using rule 20 (exp -> exp MINUS exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! MINUS           [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! MULTIPLICATION  [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! DIVISION        [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! MODULO          [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! GREATERTHAN     [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! LESSTHAN        [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! EQUALTO         [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! NOTEQUALTO      [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! AND             [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! OR              [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! POW             [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! INCREMENT       [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! DECREMENT       [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! NOT             [ reduce using rule 20 (exp -> exp MINUS exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 52

    (21) exp -> exp MULTIPLICATION exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 21 (exp -> exp MULTIPLICATION exp .)
    SEMICOL         reduce using rule 21 (exp -> exp MULTIPLICATION exp .)
    RPAREN          reduce using rule 21 (exp -> exp MULTIPLICATION exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! MINUS           [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! MULTIPLICATION  [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! DIVISION        [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! MODULO          [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! GREATERTHAN     [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! LESSTHAN        [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! EQUALTO         [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! NOTEQUALTO      [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! AND             [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! OR              [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! POW             [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! INCREMENT       [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! DECREMENT       [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! NOT             [ reduce using rule 21 (exp -> exp MULTIPLICATION exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 53

    (22) exp -> exp DIVISION exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 22 (exp -> exp DIVISION exp .)
    SEMICOL         reduce using rule 22 (exp -> exp DIVISION exp .)
    RPAREN          reduce using rule 22 (exp -> exp DIVISION exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! MINUS           [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! MULTIPLICATION  [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! DIVISION        [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! MODULO          [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! GREATERTHAN     [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! LESSTHAN        [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! EQUALTO         [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! NOTEQUALTO      [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! AND             [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! OR              [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! POW             [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! INCREMENT       [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! DECREMENT       [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! NOT             [ reduce using rule 22 (exp -> exp DIVISION exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 54

    (23) exp -> exp MODULO exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 23 (exp -> exp MODULO exp .)
    SEMICOL         reduce using rule 23 (exp -> exp MODULO exp .)
    RPAREN          reduce using rule 23 (exp -> exp MODULO exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! MINUS           [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! DIVISION        [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! MODULO          [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! GREATERTHAN     [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! LESSTHAN        [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! EQUALTO         [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! AND             [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! OR              [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! POW             [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! INCREMENT       [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! DECREMENT       [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! NOT             [ reduce using rule 23 (exp -> exp MODULO exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 55

    (24) exp -> exp GREATERTHAN exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 24 (exp -> exp GREATERTHAN exp .)
    SEMICOL         reduce using rule 24 (exp -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 24 (exp -> exp GREATERTHAN exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! MULTIPLICATION  [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! DIVISION        [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! MODULO          [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! GREATERTHAN     [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! LESSTHAN        [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! EQUALTO         [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! NOTEQUALTO      [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! AND             [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! OR              [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! POW             [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! INCREMENT       [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! DECREMENT       [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! NOT             [ reduce using rule 24 (exp -> exp GREATERTHAN exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 56

    (25) exp -> exp LESSTHAN exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 25 (exp -> exp LESSTHAN exp .)
    SEMICOL         reduce using rule 25 (exp -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 25 (exp -> exp LESSTHAN exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! MINUS           [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! MULTIPLICATION  [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! DIVISION        [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! MODULO          [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! GREATERTHAN     [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! LESSTHAN        [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! EQUALTO         [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! NOTEQUALTO      [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! AND             [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! OR              [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! POW             [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! INCREMENT       [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! DECREMENT       [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! NOT             [ reduce using rule 25 (exp -> exp LESSTHAN exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 57

    (26) exp -> exp GREATERTHANOREQUALTO exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .)
    SEMICOL         reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .)
    RPAREN          reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MINUS           [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! MODULO          [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! AND             [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! OR              [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! POW             [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! NOT             [ reduce using rule 26 (exp -> exp GREATERTHANOREQUALTO exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 58

    (27) exp -> exp LESSTHANOREQUALTO exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .)
    SEMICOL         reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .)
    RPAREN          reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MINUS           [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! MODULO          [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! AND             [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! OR              [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! POW             [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! NOT             [ reduce using rule 27 (exp -> exp LESSTHANOREQUALTO exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 59

    (28) exp -> exp EQUALTO exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 28 (exp -> exp EQUALTO exp .)
    SEMICOL         reduce using rule 28 (exp -> exp EQUALTO exp .)
    RPAREN          reduce using rule 28 (exp -> exp EQUALTO exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! MINUS           [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! MODULO          [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! AND             [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! OR              [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! POW             [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! NOT             [ reduce using rule 28 (exp -> exp EQUALTO exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 60

    (29) exp -> exp NOTEQUALTO exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 29 (exp -> exp NOTEQUALTO exp .)
    SEMICOL         reduce using rule 29 (exp -> exp NOTEQUALTO exp .)
    RPAREN          reduce using rule 29 (exp -> exp NOTEQUALTO exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! MINUS           [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! MULTIPLICATION  [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! DIVISION        [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! MODULO          [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! GREATERTHAN     [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! LESSTHAN        [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! EQUALTO         [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! NOTEQUALTO      [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! AND             [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! OR              [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! POW             [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! INCREMENT       [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! DECREMENT       [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! NOT             [ reduce using rule 29 (exp -> exp NOTEQUALTO exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 61

    (31) exp -> exp AND exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 31 (exp -> exp AND exp .)
    SEMICOL         reduce using rule 31 (exp -> exp AND exp .)
    RPAREN          reduce using rule 31 (exp -> exp AND exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! MINUS           [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! MULTIPLICATION  [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! DIVISION        [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! MODULO          [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! GREATERTHAN     [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! LESSTHAN        [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! EQUALTO         [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! NOTEQUALTO      [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! AND             [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! OR              [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! POW             [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! INCREMENT       [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! DECREMENT       [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! NOT             [ reduce using rule 31 (exp -> exp AND exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 62

    (32) exp -> exp OR exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 32 (exp -> exp OR exp .)
    SEMICOL         reduce using rule 32 (exp -> exp OR exp .)
    RPAREN          reduce using rule 32 (exp -> exp OR exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! MINUS           [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! MULTIPLICATION  [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! DIVISION        [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! MODULO          [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! GREATERTHAN     [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! LESSTHAN        [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! EQUALTO         [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! NOTEQUALTO      [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! OR              [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! POW             [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! INCREMENT       [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! DECREMENT       [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! NOT             [ reduce using rule 32 (exp -> exp OR exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 63

    (33) exp -> exp POW exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    COMMA           reduce using rule 33 (exp -> exp POW exp .)
    SEMICOL         reduce using rule 33 (exp -> exp POW exp .)
    RPAREN          reduce using rule 33 (exp -> exp POW exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! MINUS           [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! MULTIPLICATION  [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! DIVISION        [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! MODULO          [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! GREATERTHAN     [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! LESSTHAN        [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! EQUALTO         [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! NOTEQUALTO      [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! AND             [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! OR              [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! POW             [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! INCREMENT       [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! DECREMENT       [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! NOT             [ reduce using rule 33 (exp -> exp POW exp .) ]
  ! COMMA           [ shift and go to state 66 ]


state 64

    (3) exp -> LPAREN exp . RPAREN
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 65

    (6) stmt -> PRINT LPAREN exp RPAREN . SEMICOL
    (3) exp -> LPAREN exp RPAREN .

    COMMA           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MULTIPLICATION  reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DIVISION        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MODULO          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHAN     reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHAN        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    EQUALTO         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOTEQUALTO      reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    OR              reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    POW             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    INCREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DECREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOT             reduce using rule 3 (exp -> LPAREN exp RPAREN .)

  ! SEMICOL         [ shift and go to state 79 ]


state 66

    (30) exp -> exp COMMA . exp
    (3) exp -> . LPAREN exp RPAREN
    (17) exp -> . FLOAT
    (18) exp -> . INT
    (19) exp -> . exp PLUS exp
    (20) exp -> . exp MINUS exp
    (21) exp -> . exp MULTIPLICATION exp
    (22) exp -> . exp DIVISION exp
    (23) exp -> . exp MODULO exp
    (24) exp -> . exp GREATERTHAN exp
    (25) exp -> . exp LESSTHAN exp
    (26) exp -> . exp GREATERTHANOREQUALTO exp
    (27) exp -> . exp LESSTHANOREQUALTO exp
    (28) exp -> . exp EQUALTO exp
    (29) exp -> . exp NOTEQUALTO exp
    (30) exp -> . exp COMMA exp
    (31) exp -> . exp AND exp
    (32) exp -> . exp OR exp
    (33) exp -> . exp POW exp
    (34) exp -> . exp INCREMENT
    (35) exp -> . exp DECREMENT
    (36) exp -> . exp NOT
    (37) exp -> . NAME
    (38) exp -> . STRING
    (39) exp -> . MINUS exp

    LPAREN          shift and go to state 41
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    NAME            shift and go to state 15
    STRING          shift and go to state 16
    MINUS           shift and go to state 14

    exp                            shift and go to state 80

state 67

    (13) stmt -> INT NAME ASSIGN INT . SEMICOL
    (18) exp -> INT .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 81
    PLUS            reduce using rule 18 (exp -> INT .)
    MINUS           reduce using rule 18 (exp -> INT .)
    MULTIPLICATION  reduce using rule 18 (exp -> INT .)
    DIVISION        reduce using rule 18 (exp -> INT .)
    MODULO          reduce using rule 18 (exp -> INT .)
    GREATERTHAN     reduce using rule 18 (exp -> INT .)
    LESSTHAN        reduce using rule 18 (exp -> INT .)
    GREATERTHANOREQUALTO reduce using rule 18 (exp -> INT .)
    LESSTHANOREQUALTO reduce using rule 18 (exp -> INT .)
    EQUALTO         reduce using rule 18 (exp -> INT .)
    NOTEQUALTO      reduce using rule 18 (exp -> INT .)
    COMMA           reduce using rule 18 (exp -> INT .)
    AND             reduce using rule 18 (exp -> INT .)
    OR              reduce using rule 18 (exp -> INT .)
    POW             reduce using rule 18 (exp -> INT .)
    INCREMENT       reduce using rule 18 (exp -> INT .)
    DECREMENT       reduce using rule 18 (exp -> INT .)
    NOT             reduce using rule 18 (exp -> INT .)

  ! SEMICOL         [ reduce using rule 18 (exp -> INT .) ]


state 68

    (7) stmt -> INT NAME ASSIGN exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    SEMICOL         shift and go to state 82
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 69

    (12) stmt -> FLOAT NAME ASSIGN FLOAT . SEMICOL
    (17) exp -> FLOAT .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 83
    PLUS            reduce using rule 17 (exp -> FLOAT .)
    MINUS           reduce using rule 17 (exp -> FLOAT .)
    MULTIPLICATION  reduce using rule 17 (exp -> FLOAT .)
    DIVISION        reduce using rule 17 (exp -> FLOAT .)
    MODULO          reduce using rule 17 (exp -> FLOAT .)
    GREATERTHAN     reduce using rule 17 (exp -> FLOAT .)
    LESSTHAN        reduce using rule 17 (exp -> FLOAT .)
    GREATERTHANOREQUALTO reduce using rule 17 (exp -> FLOAT .)
    LESSTHANOREQUALTO reduce using rule 17 (exp -> FLOAT .)
    EQUALTO         reduce using rule 17 (exp -> FLOAT .)
    NOTEQUALTO      reduce using rule 17 (exp -> FLOAT .)
    COMMA           reduce using rule 17 (exp -> FLOAT .)
    AND             reduce using rule 17 (exp -> FLOAT .)
    OR              reduce using rule 17 (exp -> FLOAT .)
    POW             reduce using rule 17 (exp -> FLOAT .)
    INCREMENT       reduce using rule 17 (exp -> FLOAT .)
    DECREMENT       reduce using rule 17 (exp -> FLOAT .)
    NOT             reduce using rule 17 (exp -> FLOAT .)

  ! SEMICOL         [ reduce using rule 17 (exp -> FLOAT .) ]


state 70

    (8) stmt -> FLOAT NAME ASSIGN exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    SEMICOL         shift and go to state 84
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 71

    (15) stmt -> CHAR NAME ASSIGN CHAR . SEMICOL

    SEMICOL         shift and go to state 85


state 72

    (9) stmt -> CHAR NAME ASSIGN exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    SEMICOL         shift and go to state 86
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 73

    (14) stmt -> STRING NAME ASSIGN STRING . SEMICOL
    (38) exp -> STRING .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 87
    PLUS            reduce using rule 38 (exp -> STRING .)
    MINUS           reduce using rule 38 (exp -> STRING .)
    MULTIPLICATION  reduce using rule 38 (exp -> STRING .)
    DIVISION        reduce using rule 38 (exp -> STRING .)
    MODULO          reduce using rule 38 (exp -> STRING .)
    GREATERTHAN     reduce using rule 38 (exp -> STRING .)
    LESSTHAN        reduce using rule 38 (exp -> STRING .)
    GREATERTHANOREQUALTO reduce using rule 38 (exp -> STRING .)
    LESSTHANOREQUALTO reduce using rule 38 (exp -> STRING .)
    EQUALTO         reduce using rule 38 (exp -> STRING .)
    NOTEQUALTO      reduce using rule 38 (exp -> STRING .)
    COMMA           reduce using rule 38 (exp -> STRING .)
    AND             reduce using rule 38 (exp -> STRING .)
    OR              reduce using rule 38 (exp -> STRING .)
    POW             reduce using rule 38 (exp -> STRING .)
    INCREMENT       reduce using rule 38 (exp -> STRING .)
    DECREMENT       reduce using rule 38 (exp -> STRING .)
    NOT             reduce using rule 38 (exp -> STRING .)

  ! SEMICOL         [ reduce using rule 38 (exp -> STRING .) ]


state 74

    (10) stmt -> STRING NAME ASSIGN exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    SEMICOL         shift and go to state 88
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 75

    (16) stmt -> BOOL NAME ASSIGN BOOL . SEMICOL

    SEMICOL         shift and go to state 89


state 76

    (11) stmt -> BOOL NAME ASSIGN exp . SEMICOL
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

    SEMICOL         shift and go to state 90
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40


state 77

    (4) stmt -> PRINT exp COMMA exp SEMICOL .

    PRINT           reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    INT             reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    FLOAT           reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    CHAR            reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    STRING          reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    BOOL            reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)
    $end            reduce using rule 4 (stmt -> PRINT exp COMMA exp SEMICOL .)


state 78

    (3) exp -> LPAREN exp RPAREN .

    RPAREN          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MULTIPLICATION  reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DIVISION        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    MODULO          reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHAN     reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHAN        reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    GREATERTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    LESSTHANOREQUALTO reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    EQUALTO         reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOTEQUALTO      reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    OR              reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    POW             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    INCREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    DECREMENT       reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    NOT             reduce using rule 3 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 3 (exp -> LPAREN exp RPAREN .)


state 79

    (6) stmt -> PRINT LPAREN exp RPAREN SEMICOL .

    PRINT           reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    INT             reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    FLOAT           reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    CHAR            reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    STRING          reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    BOOL            reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)
    $end            reduce using rule 6 (stmt -> PRINT LPAREN exp RPAREN SEMICOL .)


state 80

    (30) exp -> exp COMMA exp .
    (19) exp -> exp . PLUS exp
    (20) exp -> exp . MINUS exp
    (21) exp -> exp . MULTIPLICATION exp
    (22) exp -> exp . DIVISION exp
    (23) exp -> exp . MODULO exp
    (24) exp -> exp . GREATERTHAN exp
    (25) exp -> exp . LESSTHAN exp
    (26) exp -> exp . GREATERTHANOREQUALTO exp
    (27) exp -> exp . LESSTHANOREQUALTO exp
    (28) exp -> exp . EQUALTO exp
    (29) exp -> exp . NOTEQUALTO exp
    (30) exp -> exp . COMMA exp
    (31) exp -> exp . AND exp
    (32) exp -> exp . OR exp
    (33) exp -> exp . POW exp
    (34) exp -> exp . INCREMENT
    (35) exp -> exp . DECREMENT
    (36) exp -> exp . NOT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for LESSTHANOREQUALTO resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for NOTEQUALTO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    RPAREN          reduce using rule 30 (exp -> exp COMMA exp .)
    SEMICOL         reduce using rule 30 (exp -> exp COMMA exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    MULTIPLICATION  shift and go to state 26
    DIVISION        shift and go to state 27
    MODULO          shift and go to state 28
    GREATERTHAN     shift and go to state 29
    LESSTHAN        shift and go to state 30
    GREATERTHANOREQUALTO shift and go to state 31
    LESSTHANOREQUALTO shift and go to state 32
    EQUALTO         shift and go to state 33
    NOTEQUALTO      shift and go to state 34
    COMMA           shift and go to state 66
    AND             shift and go to state 35
    OR              shift and go to state 36
    POW             shift and go to state 37
    INCREMENT       shift and go to state 38
    DECREMENT       shift and go to state 39
    NOT             shift and go to state 40

  ! PLUS            [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MINUS           [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MULTIPLICATION  [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! DIVISION        [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! MODULO          [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! GREATERTHAN     [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! LESSTHAN        [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! GREATERTHANOREQUALTO [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! LESSTHANOREQUALTO [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! EQUALTO         [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! NOTEQUALTO      [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! COMMA           [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! AND             [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! OR              [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! POW             [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! INCREMENT       [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! DECREMENT       [ reduce using rule 30 (exp -> exp COMMA exp .) ]
  ! NOT             [ reduce using rule 30 (exp -> exp COMMA exp .) ]


state 81

    (13) stmt -> INT NAME ASSIGN INT SEMICOL .

    PRINT           reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    INT             reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    FLOAT           reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    CHAR            reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    STRING          reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    BOOL            reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)
    $end            reduce using rule 13 (stmt -> INT NAME ASSIGN INT SEMICOL .)


state 82

    (7) stmt -> INT NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    INT             reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    FLOAT           reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    CHAR            reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    STRING          reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    BOOL            reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 7 (stmt -> INT NAME ASSIGN exp SEMICOL .)


state 83

    (12) stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .

    PRINT           reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    INT             reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    FLOAT           reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    CHAR            reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    STRING          reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    BOOL            reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)
    $end            reduce using rule 12 (stmt -> FLOAT NAME ASSIGN FLOAT SEMICOL .)


state 84

    (8) stmt -> FLOAT NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    INT             reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    FLOAT           reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    CHAR            reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    STRING          reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    BOOL            reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 8 (stmt -> FLOAT NAME ASSIGN exp SEMICOL .)


state 85

    (15) stmt -> CHAR NAME ASSIGN CHAR SEMICOL .

    PRINT           reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    INT             reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    FLOAT           reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    CHAR            reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    STRING          reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    BOOL            reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)
    $end            reduce using rule 15 (stmt -> CHAR NAME ASSIGN CHAR SEMICOL .)


state 86

    (9) stmt -> CHAR NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    INT             reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    FLOAT           reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    CHAR            reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    STRING          reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    BOOL            reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 9 (stmt -> CHAR NAME ASSIGN exp SEMICOL .)


state 87

    (14) stmt -> STRING NAME ASSIGN STRING SEMICOL .

    PRINT           reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    INT             reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    FLOAT           reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    CHAR            reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    STRING          reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    BOOL            reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)
    $end            reduce using rule 14 (stmt -> STRING NAME ASSIGN STRING SEMICOL .)


state 88

    (10) stmt -> STRING NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    INT             reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    FLOAT           reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    CHAR            reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    STRING          reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    BOOL            reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 10 (stmt -> STRING NAME ASSIGN exp SEMICOL .)


state 89

    (16) stmt -> BOOL NAME ASSIGN BOOL SEMICOL .

    PRINT           reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    INT             reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    FLOAT           reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    CHAR            reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    STRING          reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    BOOL            reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)
    $end            reduce using rule 16 (stmt -> BOOL NAME ASSIGN BOOL SEMICOL .)


state 90

    (11) stmt -> BOOL NAME ASSIGN exp SEMICOL .

    PRINT           reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    INT             reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    FLOAT           reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    CHAR            reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    STRING          reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    BOOL            reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)
    $end            reduce using rule 11 (stmt -> BOOL NAME ASSIGN exp SEMICOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOL in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 49 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUALTO in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUALTO in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 49 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALTO in state 49 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for POW in state 49 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 49 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT in state 49 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 67 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 69 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 80 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANOREQUALTO in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSTHANOREQUALTO in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 80 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALTO in state 80 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for POW in state 80 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 80 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
