
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SrightINCREMENTDECREMENTPOWMULTIPLICATIONDIVISIONMODULOPLUSMINUSBOOL CHAR DECREMENT DIVISION FLOAT INCREMENT INT MINUS MODULO MULTIPLICATION NAME PLUS POW PRINT SEMICOL STRING\n    S : stmt S\n    \n    S :\n    \n    stmt : PRINT exp SEMICOL\n     \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULTIPLICATION exp\n        | exp DIVISION exp\n        | exp MODULO exp\n        | exp POW exp\n        | exp INCREMENT\n        | exp DECREMENT\n    \n    exp : INT\n    '
    
_lr_action_items = {'$end':([0,1,2,4,7,],[-2,0,-2,-1,-3,]),'PRINT':([0,2,7,],[3,3,-3,]),'INT':([3,8,9,10,11,12,13,],[6,6,6,6,6,6,6,]),'SEMICOL':([5,6,14,15,16,17,18,19,20,21,],[7,-12,-10,-11,-4,-5,-6,-7,-8,-9,]),'PLUS':([5,6,14,15,16,17,18,19,20,21,],[8,-12,-10,-11,8,8,8,8,8,8,]),'MINUS':([5,6,14,15,16,17,18,19,20,21,],[9,-12,-10,-11,9,9,9,9,9,9,]),'MULTIPLICATION':([5,6,14,15,16,17,18,19,20,21,],[10,-12,-10,-11,10,10,10,10,10,10,]),'DIVISION':([5,6,14,15,16,17,18,19,20,21,],[11,-12,-10,-11,11,11,11,11,11,11,]),'MODULO':([5,6,14,15,16,17,18,19,20,21,],[12,-12,-10,-11,12,12,12,12,12,12,]),'POW':([5,6,14,15,16,17,18,19,20,21,],[13,-12,-10,-11,13,13,13,13,13,13,]),'INCREMENT':([5,6,14,15,16,17,18,19,20,21,],[14,-12,-10,-11,14,14,14,14,14,14,]),'DECREMENT':([5,6,14,15,16,17,18,19,20,21,],[15,-12,-10,-11,15,15,15,15,15,15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,2,],[1,4,]),'stmt':([0,2,],[2,2,]),'exp':([3,8,9,10,11,12,13,],[5,16,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> stmt S','S',2,'p_start','yapl_parser.py',19),
  ('S -> <empty>','S',0,'p_start_empty','yapl_parser.py',26),
  ('stmt -> PRINT exp SEMICOL','stmt',3,'p_print_stmt','yapl_parser.py',33),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','yapl_parser.py',40),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','yapl_parser.py',41),
  ('exp -> exp MULTIPLICATION exp','exp',3,'p_exp_bin','yapl_parser.py',42),
  ('exp -> exp DIVISION exp','exp',3,'p_exp_bin','yapl_parser.py',43),
  ('exp -> exp MODULO exp','exp',3,'p_exp_bin','yapl_parser.py',44),
  ('exp -> exp POW exp','exp',3,'p_exp_bin','yapl_parser.py',45),
  ('exp -> exp INCREMENT','exp',2,'p_exp_bin','yapl_parser.py',46),
  ('exp -> exp DECREMENT','exp',2,'p_exp_bin','yapl_parser.py',47),
  ('exp -> INT','exp',1,'p_exp_num','yapl_parser.py',54),
]
